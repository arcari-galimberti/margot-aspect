//
// Created by leonardoarcari on 01/06/17.
//

#ifndef ASPECT_PROJECT_ASPECTGENERATOR_H
#define ASPECT_PROJECT_ASPECTGENERATOR_H

#include "AspectParser.h"
#include <string>

namespace ag {
class AspectGenerator {
public:
  AspectGenerator(const std::string &xmlPath, const std::string &outputPath);
  AspectGenerator(const AspectGenerator &oag);

  void outputPathname(const std::string &outputPath);
  const std::string &generateAspect();
  const std::string &generateAspectHeaders();
  const std::string &generateRoiHeaders();
  void writeAspect() const;
  void writeAspectHeaders() const;
  void writeRoiHeaders() const;

private:
  std::string _xmlPathname;
  std::string _outputPathname;
  AspectParser _parser;
  std::string _genedAspect;
  std::string _genedAspectHeaders;
  std::string _genedRoiHeaders;

  static constexpr char ind[] = "  ";
  static constexpr char generatedIntro[] =
      "/**\n"
      " * This file is machine generated by MarGotAspect.\n"
      " * You are not supposed to manually edit the following code, the risk\n"
      " * is to make it stop working with the MarGotAspect build system.\n"
      " * For any further details please reach us at:\n"
      " * https://github.com/arcari-galimberti/margot-aspect\n"
      " */";
};

void generateAspect(const std::string &xmlPathname,
                    const std::string &outputPathname);
}

#endif // ASPECT_PROJECT_ASPECTGENERATOR_H
